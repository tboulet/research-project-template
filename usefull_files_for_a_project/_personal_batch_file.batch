#!/bin/bash
## ============== This is the configuration proper to my cluster ==============

#SBATCH --job-name=my_job
#SBATCH --output=out.txt
#SBATCH --error=out.txt

## For partition: either prod10, prod 20, prod 40 or prod80
#SBATCH --partition=prod10

## For gres: either 1g.10gb:[1:10] for prod10, 2g.20gb:[1:4] for prod20, 3g.40gb:1 for prod40 or A100.80gb for prod80.
#SBATCH --gres=gpu:1g.10gb:1

## For ntasks and cpus: total requested cpus (ntasks * cpus-per-task) must be in [1: 4 * nMIG] with nMIG = nb_1g.10gb | 2 * nb_2g.20gb | 4 * nb_3g.40gb | 8 * nb_A100.80gb
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4

## Walltime limit
#SBATCH --time=24:00:00



## ============== Run your job here ==============

## Setup
source path/to/your/venv/bin/activate
cd path/to/your/project

# Create a directory to store the logs
initial_date=$(date +"%Y%m%d_%H%M%S")
mkdir -p "logs/run_$initial_date"

# Iterate over several seeds
seed_max=10
for seed in $(seq 1 $seed_max); do
    # Option 1 : Run your experiment (this will log the logs in logs/run_$initial_date/seed_$seed.log)
    python run.py --config-name benchmark seed=$seed > "logs/run_$initial_date/seed_$seed.log" 2>&1
    # Option 2 : You run a benchmark. Compare at equal seeds
    env_tags=(exp_uni exp_bi exp_tri exp_quad)
    for env_tag in ${env_tags[@]}; do
        python run.py --config-name benchmark env=env_tag seed=$seed > "logs/run_$initial_date/$env_tag/seed_$seed.log" 2>&1
    done
done
